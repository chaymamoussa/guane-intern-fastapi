######  IMPORTANT NOTE
# For security reasons this file is meant NOT to be commited to the repository,
# but for the purpose of completness of the application it needs to. In a
# normal developement purpose, this file would be shared by other means with
# the development team members.



### Server config
###############################################################################

BACKEND_HOST=0.0.0.0
BACKEND_PORT=8080
SERVER_WORKERS=1



### API config
###############################################################################

PROJECT_TITLE=FastAPI-PostgreSQL-Celery project

# Routers prefixes
API_PREFIX=/api
DOGS_API_PREFIX=/dogs
USERS_API_PREFIX=/users
UPLOAD_API_PREFIX=/upload
SECURITY_PREFIX=/security

### Security config. Each variable should be a comma separated string. ###

ALLOWED_HOSTS=*
ALLOWED_ORIGINS=*
ALLOWED_METHODS=*
ALLOWED_HEADERS=*

# JWT Config

SECRET_KEY=cdd0ad817f0cdbc1f28c532875d2802953ab76e9491da221a848dbc15a2c9fb8
ALGORITHM=HS256
ACCESS_TOKEN_EXPIRE_MINUTES=30

# $TOKEN_URI should be hardcoded to meet this format (same reason as $POSGRES_URI)
# $TOKEN_URI=${API_PREFIX}${SECURITY_PREFIX}${TOKEN_RELATIVE_ROUTE}
# e.g. in this case

TOKEN_RELATIVE_ROUTE=/token
TOKEN_URI=/api/security/token

# This fields must match the data stored in ``superusers_db`` variable
# from ``app.db.data.superusers_fake_db`` module

FIRST_SUPERUSER=guane
FIRST_SUPERUSER_PASSWORD=ilovethoriai

# System path of the png file to upload to $UPLOAD_FILE_URI
# This path should be relative to the ``app.api.routers.upload_file`` module

UPLOAD_FILE_PATH=../../../img/guane-logo.png



### Database Config
###############################################################################

# This values are used by docker
POSTGRES_USER=guane
POSTGRES_PASSWORD=thori
POSTGRES_HOST=postgres
POSTGRES_PORT=5432
POSTGRES_DB=guane-default

# Due to some bug in load_dotenv() when run form the docker container, we need to
# hardcode again all the POSTGRES_URI. PLEASE set ${POSTGRES_URI} with THE SAME
# VALUES defined in  ${POSTGRES_USER}, ${POSTGRES_PASSWORD}, ${POSTGRES_HOST},
# ${POSTGRES_PORT}, ${POSTGRES_DB} and using the following format:
# POSTGRES_URI=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
# e.g. for the values defined just before:

POSTGRES_URI=postgresql+psycopg2://guane:thori@postgres:5432/guane-default

# Set the URI for your local build (as opposed to docker build)
# In this case it is a userless, paswordless database named `guane`
# listening at localhost:5432

POSTGRES_LOCAL_URI=postgresql+psycopg2://localhost:5432/guane



### Testing Database Config

# This variable is used in the docker image to test the app. Unfortunately, it
# needs to be the same as the usual database, because the postgres docker image
# only creates one database in its initialization script

POSTGRES_TESTS_URI=postgresql+psycopg2://guane:thori@postgres:5432/guane-default

# Set the db URI for your local tests (as opposed to docker tests)
# In this case it is a userless, paswordless database named `guane-tests`
# listening at localhost:5432

POSTGRES_LOCAL_TESTS_URI=postgresql+psycopg2://localhost:5432/guane-tests



### External APIs config
###############################################################################

# Requests timeout
REQUESTS_TIMEOUT=20

# Dog API
DOG_API_URI=https://dog.ceo/api/breeds/image/random

# Guane API
UPLOAD_FILE_URI=https://gttb.guane.dev/api/files
